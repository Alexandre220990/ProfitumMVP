#!/usr/bin/env node

/**
 * Script de Test Rapide - Workflows Documentaires FinancialTracker
 * Validation simple et rapide
 */

import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabase = createClient(
    process.env.SUPABASE_URL,
    process.env.SUPABASE_SERVICE_ROLE_KEY
);

console.log('üöÄ Test Rapide des Workflows Documentaires\n');

async function testRapide() {
    try {
        // Test 1: V√©rifier les templates
        console.log('1Ô∏è‚É£ V√©rification des templates...');
        const { data: templates, error: templatesError } = await supabase
            .from('WorkflowTemplate')
            .select('name, sla_hours')
            .order('name');

        if (templatesError) throw templatesError;
        console.log(`‚úÖ ${templates.length} templates trouv√©s\n`);

        // Test 2: V√©rifier les √©tapes
        console.log('2Ô∏è‚É£ V√©rification des √©tapes...');
        const { data: steps, error: stepsError } = await supabase
            .from('WorkflowStep')
            .select('name, assigned_role, workflow_id')
            .order('order');

        if (stepsError) throw stepsError;
        console.log(`‚úÖ ${steps.length} √©tapes trouv√©es\n`);

        // Test 3: V√©rifier l'int√©grit√©
        console.log('3Ô∏è‚É£ V√©rification de l\'int√©grit√©...');
        const { data: integrity, error: integrityError } = await supabase
            .from('WorkflowTemplate')
            .select(`
                name,
                WorkflowStep:WorkflowStep(count)
            `);

        if (integrityError) throw integrityError;
        
        let allValid = true;
        for (const workflow of integrity) {
            const stepCount = workflow.WorkflowStep[0]?.count || 0;
            if (stepCount === 0) {
                console.log(`‚ùå ${workflow.name} n'a aucune √©tape`);
                allValid = false;
            }
        }

        if (allValid) {
            console.log('‚úÖ Tous les workflows ont des √©tapes\n');
        }

        // R√©sum√©
        console.log('üìä R√âSUM√â:');
        console.log(`   Templates: ${templates.length}`);
        console.log(`   √âtapes: ${steps.length}`);
        console.log(`   Int√©grit√©: ${allValid ? '‚úÖ OK' : '‚ùå PROBL√àME'}`);
        
        console.log('\nüéâ Test rapide termin√© avec succ√®s !');

    } catch (error) {
        console.error('‚ùå Erreur:', error.message);
        process.exit(1);
    }
}

testRapide(); 