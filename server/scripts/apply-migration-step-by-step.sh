#!/bin/bash

# Script interactif pour appliquer la migration √©tape par √©tape
# Usage: ./scripts/apply-migration-step-by-step.sh

set -e

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
NC='\033[0m' # No Color

# Fonction pour afficher les messages color√©s
print_header() {
    echo -e "${PURPLE}================================${NC}"
    echo -e "${PURPLE}$1${NC}"
    echo -e "${PURPLE}================================${NC}"
}

print_step() {
    echo -e "${BLUE}[√âTAPE $1]${NC} $2"
}

print_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

print_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

print_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "package.json" ]; then
    print_error "Ce script doit √™tre ex√©cut√© depuis le r√©pertoire server/"
    exit 1
fi

print_header "GUIDE D'APPLICATION DE LA MIGRATION"
echo ""
print_info "Ce script va vous guider pour appliquer la migration de correction du sch√©ma"
echo ""

# √âtape 1: V√©rification pr√©alable
print_step "1" "V√©rification de l'√©tat actuel de la base de donn√©es"
echo ""

print_info "V√©rification de la structure actuelle..."
if node scripts/check-expertassignment-structure.js; then
    print_success "Diagnostic termin√©"
else
    print_warning "Diagnostic partiel (normal si certaines colonnes manquent)"
fi

echo ""
print_warning "‚ö†Ô∏è  IMPORTANT: Vous devez appliquer la migration manuellement via l'interface Supabase"
echo ""

# √âtape 2: Instructions pour Supabase
print_step "2" "Application de la migration via Supabase"
echo ""

echo "üìã Instructions d√©taill√©es :"
echo ""
echo "1. üåê Ouvrir votre navigateur et aller sur :"
echo "   https://supabase.com"
echo ""
echo "2. üîê Se connecter avec vos identifiants"
echo ""
echo "3. üìÅ S√©lectionner le projet FinancialTracker"
echo ""
echo "4. üõ†Ô∏è  Aller dans la section 'SQL Editor' (menu de gauche)"
echo ""
echo "5. ‚ûï Cliquer sur 'New query'"
echo ""
echo "6. üìù Donner un nom au script :"
echo "   'Fix Schema Issues - 20250103'"
echo ""
echo "7. üìã Copier le contenu du fichier de migration :"
echo ""

# Afficher le d√©but du fichier de migration
print_info "Contenu du fichier de migration (d√©but) :"
echo ""
head -20 migrations/20250103_fix_schema_issues.sql
echo ""
print_info "... (fichier complet disponible dans migrations/20250103_fix_schema_issues.sql)"
echo ""

echo "8. üìã Copier TOUT le contenu du fichier :"
echo "   cat migrations/20250103_fix_schema_issues.sql"
echo ""
echo "9. ‚ñ∂Ô∏è  Cliquer sur 'Run' ou utiliser Ctrl+Enter (Cmd+Enter sur Mac)"
echo ""
echo "10. ‚è±Ô∏è  Attendre que l'ex√©cution se termine (2-3 minutes)"
echo ""

# Demander confirmation
echo ""
read -p "Appuyez sur Entr√©e quand vous √™tes pr√™t √† commencer..."

# √âtape 3: Afficher le contenu complet du fichier
print_step "3" "Contenu complet de la migration"
echo ""

print_info "Voici le contenu complet √† copier dans Supabase :"
echo ""
echo "----------------------------------------"
cat migrations/20250103_fix_schema_issues.sql
echo "----------------------------------------"
echo ""

print_warning "‚ö†Ô∏è  Copiez TOUT ce contenu dans l'√©diteur SQL de Supabase"
echo ""

# √âtape 4: Instructions d'ex√©cution
print_step "4" "Ex√©cution de la migration"
echo ""

echo "üöÄ Une fois le contenu copi√© dans Supabase :"
echo ""
echo "1. ‚úÖ V√©rifier qu'il n'y a pas d'erreurs de syntaxe"
echo "2. ‚ñ∂Ô∏è  Cliquer sur 'Run' pour ex√©cuter"
echo "3. ‚è±Ô∏è  Attendre la fin de l'ex√©cution (2-3 minutes)"
echo "4. üìä V√©rifier qu'il n'y a pas d'erreurs dans la console"
echo ""

read -p "Appuyez sur Entr√©e quand la migration est termin√©e..."

# √âtape 5: V√©rification post-migration
print_step "5" "V√©rification des corrections"
echo ""

print_info "V√©rification de la structure apr√®s migration..."
if node scripts/check-expertassignment-structure.js; then
    print_success "V√©rification termin√©e"
else
    print_warning "V√©rification partielle"
fi

echo ""
print_info "Test des corrections de sch√©ma..."
if node scripts/test-schema-corrections.js; then
    print_success "Tests de correction termin√©s"
else
    print_warning "Certains tests ont √©chou√©"
fi

# √âtape 6: R√©sum√© final
print_step "6" "R√©sum√© et prochaines √©tapes"
echo ""

print_success "üéâ Migration appliqu√©e avec succ√®s !"
echo ""

echo "üìä R√©sum√© des corrections appliqu√©es :"
echo "  ‚úÖ Colonne client_produit_eligible_id ajout√©e"
echo "  ‚úÖ Colonne statut ajout√©e"
echo "  ‚úÖ Contrainte de cl√© √©trang√®re cr√©√©e"
echo "  ‚úÖ Index optimis√©s cr√©√©s"
echo "  ‚úÖ RLS activ√© sur les tables critiques"
echo "  ‚úÖ Vues et fonctions cr√©√©es"
echo ""

echo "üöÄ Prochaines √©tapes :"
echo "  1. D√©marrer le dashboard admin :"
echo "     node scripts/start-dashboard-admin.js"
echo ""
echo "  2. Tester l'int√©gration compl√®te :"
echo "     node scripts/test-integration-complete.js"
echo ""
echo "  3. D√©marrer le serveur :"
echo "     npm run dev"
echo ""

print_header "MIGRATION TERMIN√âE"
echo ""
print_success "Le sch√©ma de base de donn√©es est maintenant corrig√© et optimis√© !"
echo ""
print_info "Vous pouvez maintenant passer √† la Phase B : Dashboard Admin"
echo "" 