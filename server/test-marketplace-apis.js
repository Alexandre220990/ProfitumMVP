const axios = require('axios');
require('dotenv').config();

const BASE_URL = 'http://localhost:3001/api';

async function testMarketplaceAPIs() {
    console.log('üß™ Test des APIs Marketplace...\n');

    try {
        // 1. Test de r√©cup√©ration des experts
        console.log('1Ô∏è‚É£ Test API /experts/marketplace');
        const expertsResponse = await axios.get(`${BASE_URL}/experts/marketplace`);
        console.log(`‚úÖ ${expertsResponse.data.length} experts r√©cup√©r√©s`);
        console.log('   - Premier expert:', expertsResponse.data[0]?.name || 'N/A');

        // 2. Test de r√©cup√©ration des assignations
        console.log('\n2Ô∏è‚É£ Test API /experts/assignments');
        const assignmentsResponse = await axios.get(`${BASE_URL}/experts/assignments`);
        console.log(`‚úÖ ${assignmentsResponse.data.length} assignations r√©cup√©r√©es`);
        console.log('   - Premi√®re assignation:', assignmentsResponse.data[0]?.id || 'N/A');

        // 3. Test de cr√©ation d'une assignation
        console.log('\n3Ô∏è‚É£ Test cr√©ation assignation');
        const newAssignment = {
            expert_id: expertsResponse.data[0]?.id,
            client_id: 'test-client-id',
            status: 'pending',
            compensation_amount: 2000.00,
            compensation_percentage: 20.0,
            notes: 'Test API assignation'
        };
        
        const createResponse = await axios.post(`${BASE_URL}/experts/assignments`, newAssignment);
        console.log('‚úÖ Assignation cr√©√©e:', createResponse.data.id);

        // 4. Test de r√©cup√©ration des messages
        console.log('\n4Ô∏è‚É£ Test API /experts/assignments/{id}/messages');
        const messagesResponse = await axios.get(`${BASE_URL}/experts/assignments/${createResponse.data.id}/messages`);
        console.log(`‚úÖ ${messagesResponse.data.length} messages r√©cup√©r√©s`);

        // 5. Test de cr√©ation d'un message
        console.log('\n5Ô∏è‚É£ Test cr√©ation message');
        const newMessage = {
            content: 'Test message via API',
            message_type: 'text',
            sender_id: expertsResponse.data[0]?.id,
            sender_type: 'expert'
        };
        
        const messageResponse = await axios.post(`${BASE_URL}/experts/assignments/${createResponse.data.id}/messages`, newMessage);
        console.log('‚úÖ Message cr√©√©:', messageResponse.data.id);

        // 6. Test de r√©cup√©ration des notifications
        console.log('\n6Ô∏è‚É£ Test API /notifications');
        const notificationsResponse = await axios.get(`${BASE_URL}/notifications`);
        console.log(`‚úÖ ${notificationsResponse.data.length} notifications r√©cup√©r√©es`);

        console.log('\nüéâ Tous les tests APIs marketplace PASS√âS !');
        console.log('\nüìä R√©sum√© des APIs test√©es:');
        console.log('   ‚úÖ GET /experts/marketplace');
        console.log('   ‚úÖ GET /experts/assignments');
        console.log('   ‚úÖ POST /experts/assignments');
        console.log('   ‚úÖ GET /experts/assignments/{id}/messages');
        console.log('   ‚úÖ POST /experts/assignments/{id}/messages');
        console.log('   ‚úÖ GET /notifications');

    } catch (error) {
        console.error('‚ùå Erreur test APIs:', error.response?.data || error.message);
        
        if (error.code === 'ECONNREFUSED') {
            console.log('\nüí° Le serveur backend n\'est pas d√©marr√©.');
            console.log('   D√©marrez-le avec: npm run dev');
        }
    }
}

testMarketplaceAPIs(); 