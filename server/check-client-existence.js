const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_ANON_KEY);

async function checkClientExistence() {
  console.log('üîç V√©rification de l\'existence du client\n');

  const testClientId = '0538de29-4287-4c28-b76a-b65ef993f393';
  
  try {
    // 1. Lister tous les clients
    console.log('1Ô∏è‚É£ Liste de tous les clients...');
    
    const { data: allClients, error: listError } = await supabase
      .from('Client')
      .select('id, nom, email, "nombreEmployes", statut')
      .limit(10);

    if (listError) {
      console.log(`‚ùå Erreur lors de la liste: ${listError.message}`);
      return;
    }

    console.log(`‚úÖ ${allClients.length} clients trouv√©s:`);
    allClients.forEach((client, index) => {
      console.log(`   ${index + 1}. ID: ${client.id}`);
      console.log(`      Nom: ${client.nom || 'Non d√©fini'}`);
      console.log(`      Email: ${client.email}`);
      console.log(`      Employ√©s: ${client.nombreEmployes || 'Non d√©fini'}`);
      console.log(`      Statut: ${client.statut || 'Non d√©fini'}`);
      console.log('');
    });

    // 2. V√©rifier le client sp√©cifique
    console.log('2Ô∏è‚É£ V√©rification du client sp√©cifique...');
    
    const { data: specificClient, error: specificError } = await supabase
      .from('Client')
      .select('*')
      .eq('id', testClientId);

    if (specificError) {
      console.log(`‚ùå Erreur lors de la recherche: ${specificError.message}`);
      return;
    }

    if (specificClient.length === 0) {
      console.log(`‚ùå Client avec l'ID ${testClientId} non trouv√©`);
      
      // 3. Cr√©er le client s'il n'existe pas
      console.log('\n3Ô∏è‚É£ Cr√©ation du client...');
      const { data: newClient, error: createError } = await supabase
        .from('Client')
        .insert({
          id: testClientId,
          nom: 'Alexandre Grandjean',
          email: 'grandjean.alexandre5@gmail.com',
          nombreEmployes: 25,
          secteurActivite: 'Technologie',
          chiffreAffaires: 1500000.00,
          statut: 'actif',
          dateCreation: new Date().toISOString(),
          derniereConnexion: new Date().toISOString(),
          notes: 'Client cr√©√© via script de test',
          metadata: {
            source: 'test-script',
            version: '1.0'
          }
        })
        .select()
        .single();

      if (createError) {
        console.log(`‚ùå Erreur cr√©ation: ${createError.message}`);
        console.log('D√©tails:', createError);
      } else {
        console.log(`‚úÖ Client cr√©√© avec succ√®s!`);
        console.log('üìä D√©tails:', JSON.stringify(newClient, null, 2));
      }
    } else {
      console.log(`‚úÖ Client trouv√© (${specificClient.length} entr√©es):`);
      specificClient.forEach((client, index) => {
        console.log(`   ${index + 1}. ID: ${client.id}`);
        console.log(`      Nom: ${client.nom || 'Non d√©fini'}`);
        console.log(`      Email: ${client.email}`);
        console.log(`      Employ√©s: ${client.nombreEmployes || 'Non d√©fini'}`);
        console.log(`      Statut: ${client.statut || 'Non d√©fini'}`);
        console.log('');
      });
    }

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error);
  }
}

// Ex√©cuter le test
checkClientExistence(); 