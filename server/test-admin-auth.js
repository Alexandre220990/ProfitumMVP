const axios = require('axios');

const BASE_URL = 'http://localhost:5001';

async function testAdminAuth() {
  console.log('üß™ Test d\'authentification admin...\n');

  try {
    // Test 1: Connexion avec les identifiants admin
    console.log('1Ô∏è‚É£ Connexion admin:');
    const loginResponse = await axios.post(`${BASE_URL}/api/auth/login`, {
      email: 'grandjean.alexandre5@gmail.com',
      password: 'Adminprofitum'
    });

    if (loginResponse.data.success) {
      console.log('‚úÖ Connexion r√©ussie');
      const token = loginResponse.data.data.token;
      console.log('Token obtenu:', token ? '‚úÖ' : '‚ùå');

      // Test 2: Acc√®s √† la documentation avec le token
      console.log('\n2Ô∏è‚É£ Test acc√®s documentation:');
      try {
        const docResponse = await axios.get(`${BASE_URL}/api/documentation/categories`, {
          headers: {
            'Authorization': `Bearer ${token}`
          }
        });
        
        if (docResponse.data.success) {
          console.log('‚úÖ Acc√®s √† la documentation r√©ussi');
          console.log('Cat√©gories trouv√©es:', docResponse.data.data?.length || 0);
        } else {
          console.log('‚ùå Erreur acc√®s documentation:', docResponse.data.message);
        }
      } catch (error) {
        console.log('‚ùå Erreur acc√®s documentation:', error.response?.status, error.response?.data?.message);
      }

      // Test 3: Test des stats de documentation
      console.log('\n3Ô∏è‚É£ Test stats documentation:');
      try {
        const statsResponse = await axios.get(`${BASE_URL}/api/documentation/stats`, {
          headers: {
            'Authorization': `Bearer ${token}`
          }
        });
        
        if (statsResponse.data.success) {
          console.log('‚úÖ Stats documentation r√©cup√©r√©es');
          console.log('Total documents:', statsResponse.data.data?.totalDocuments || 0);
        } else {
          console.log('‚ùå Erreur stats:', statsResponse.data.message);
        }
      } catch (error) {
        console.log('‚ùå Erreur stats:', error.response?.status, error.response?.data?.message);
      }

    } else {
      console.log('‚ùå √âchec de la connexion:', loginResponse.data.message);
    }

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error.response?.data || error.message);
  }
}

// Attendre que le serveur soit pr√™t
setTimeout(testAdminAuth, 3000); 