import { Router } from "express";
import { createClient } from "@supabase/supabase-js";

const router = Router();

// Cr√©er une connexion Supabase avec la cl√© de service
const supabase = createClient(
  process.env.SUPABASE_URL!,
  process.env.SUPABASE_SERVICE_ROLE_KEY!
);

// Route publique pour r√©cup√©rer toutes les sp√©cialisations (pas d'authentification requise)
router.get("/", async (req, res) => {
  try {
    console.log('üîç R√©cup√©ration des sp√©cialisations depuis ProduitEligible...');
    
    const { data: produits, error } = await supabase
      .from('ProduitEligible')
      .select('id, nom, description')
      .order('nom', { ascending: true });

    if (error) {
      console.error('‚ùå Erreur r√©cup√©ration ProduitEligible:', error);
      throw error;
    }

    console.log(`‚úÖ ${produits?.length || 0} sp√©cialisations trouv√©es`);

    // Transformer les donn√©es pour correspondre √† l'interface frontend
    const specializations = produits?.map(produit => ({
      id: produit.id,
      name: produit.nom,
      description: produit.description
    })) || [];

    console.log('üìã Sp√©cialisations format√©es:', specializations);

    return res.json({
      success: true,
      data: specializations,
      message: `${specializations.length} sp√©cialisations trouv√©es`
    });

  } catch (error: any) {
    console.error("‚ùå Erreur lors de la r√©cup√©ration des sp√©cialisations:", error);
    return res.status(500).json({
      success: false,
      error: error.message || "Une erreur est survenue lors de la r√©cup√©ration des sp√©cialisations"
    });
  }
});

// Route publique pour r√©cup√©rer une sp√©cialisation par ID
router.get("/:id", async (req, res) => {
  try {
    const { id } = req.params;
    
    const { data: produit, error } = await supabase
      .from('ProduitEligible')
      .select('*')
      .eq('id', id)
      .single();

    if (error) {
      console.error('‚ùå Erreur r√©cup√©ration sp√©cialisation:', error);
      return res.status(404).json({
        success: false,
        error: "Sp√©cialisation non trouv√©e"
      });
    }

    const specialization = {
      id: produit.id,
      name: produit.nom,
      description: produit.description
    };

    return res.json({
      success: true,
      data: specialization
    });

  } catch (error: any) {
    console.error("‚ùå Erreur lors de la r√©cup√©ration de la sp√©cialisation:", error);
    return res.status(500).json({
      success: false,
      error: error.message || "Une erreur est survenue"
    });
  }
});

export default router; 