import { supabase } from '../lib/supabase';

const produitsEligibles = [
  {
    nom: 'R√©cup√©ration TICPE',
    description: 'Remboursement de la taxe sur les carburants professionnels',
    tauxMin: 0.10,
    tauxMax: 0.20,
    montantMin: 1000,
    montantMax: 100000,
    dureeMin: 12,
    dureeMax: 36
  },
  {
    nom: 'D√©duction Forfaitaire Sp√©cifique',
    description: 'R√©duction de l\'assiette des cotisations sociales pour m√©tiers techniques',
    tauxMin: 0.05,
    tauxMax: 0.15,
    montantMin: 500,
    montantMax: 50000,
    dureeMin: 12,
    dureeMax: 24
  },
  {
    nom: 'Optimisation URSSAF',
    description: 'Trop-per√ßus et r√©gularisations de cotisations sociales',
    tauxMin: 0.01,
    tauxMax: 0.05,
    montantMin: 1000,
    montantMax: 100000,
    dureeMin: 6,
    dureeMax: 18
  },
  {
    nom: 'Optimisation Taxe Fonci√®re',
    description: 'Optimisation de la taxe fonci√®re sur les propri√©t√©s b√¢ties',
    tauxMin: 0.20,
    tauxMax: 0.40,
    montantMin: 500,
    montantMax: 25000,
    dureeMin: 12,
    dureeMax: 24
  },
  {
    nom: 'Optimisation √ânergie',
    description: 'Optimisation des contrats d\'√©lectricit√© et de gaz',
    tauxMin: 0.05,
    tauxMax: 0.15,
    montantMin: 500,
    montantMax: 20000,
    dureeMin: 12,
    dureeMax: 36
  }
];

async function insertProduitsEligibles() {
  console.log('üöÄ Insertion des produits √©ligibles...');
  
  for (const produit of produitsEligibles) {
    try {
      // V√©rifier si le produit existe d√©j√†
      const { data: existing } = await supabase
        .from('ProduitEligible')
        .select('id')
        .eq('nom', produit.nom)
        .single();
      
      if (existing) {
        console.log(`‚úÖ Produit d√©j√† existant: ${produit.nom}`);
        continue;
      }
      
      // Ins√©rer le nouveau produit
      const { data, error } = await supabase
        .from('ProduitEligible')
        .insert({
          nom: produit.nom,
          description: produit.description,
          tauxMin: produit.tauxMin,
          tauxMax: produit.tauxMax,
          montantMin: produit.montantMin,
          montantMax: produit.montantMax,
          dureeMin: produit.dureeMin,
          dureeMax: produit.dureeMax
        })
        .select()
        .single();
      
      if (error) {
        console.error(`‚ùå Erreur insertion ${produit.nom}:`, error);
      } else {
        console.log(`‚úÖ Produit ins√©r√©: ${produit.nom} (ID: ${data.id})`);
      }
      
    } catch (error) {
      console.error(`‚ùå Erreur pour ${produit.nom}:`, error);
    }
  }
  
  console.log('üéâ Insertion termin√©e !');
}

// Ex√©cuter le script
insertProduitsEligibles().catch(console.error); 