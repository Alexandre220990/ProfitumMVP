#!/bin/bash

# ============================================================================
# SCRIPT DE CONFIGURATION COMPL√àTE - GOOGLE CALENDAR PROFITUMV2
# ============================================================================

echo "üöÄ Configuration compl√®te de l'int√©gration Google Calendar"
echo "=========================================================="

# Couleurs pour l'affichage
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# ============================================================================
# V√âRIFICATIONS PR√âALABLES
# ============================================================================

echo -e "\n${BLUE}üîç V√©rifications pr√©alables...${NC}"

# V√©rifier Node.js
if ! command -v node &> /dev/null; then
    echo -e "${RED}‚ùå Node.js n'est pas install√©${NC}"
    exit 1
fi

# V√©rifier npm
if ! command -v npm &> /dev/null; then
    echo -e "${RED}‚ùå npm n'est pas install√©${NC}"
    exit 1
fi

# V√©rifier les dossiers
if [ ! -d "server" ]; then
    echo -e "${RED}‚ùå Dossier server non trouv√©${NC}"
    exit 1
fi

if [ ! -d "client" ]; then
    echo -e "${RED}‚ùå Dossier client non trouv√©${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ V√©rifications pr√©alables OK${NC}"

# ============================================================================
# INSTALLATION DES D√âPENDANCES
# ============================================================================

echo -e "\n${BLUE}üì¶ Installation des d√©pendances...${NC}"

# Serveur
echo -e "${YELLOW}Installation des d√©pendances serveur...${NC}"
cd server
npm install googleapis @types/googleapis
npm install express-rate-limit
npm install joi
npm install socket.io @types/socket.io
cd ..

# Client
echo -e "${YELLOW}Installation des d√©pendances client...${NC}"
cd client
npm install @types/google.maps
npm install date-fns
cd ..

echo -e "${GREEN}‚úÖ D√©pendances install√©es${NC}"

# ============================================================================
# CONFIGURATION DES VARIABLES D'ENVIRONNEMENT
# ============================================================================

echo -e "\n${BLUE}üîê Configuration des variables d'environnement...${NC}"

# Cr√©er le fichier .env du serveur
if [ ! -f "server/.env" ]; then
    echo -e "${YELLOW}Cr√©ation du fichier server/.env...${NC}"
    cat > server/.env << EOF
# ============================================================================
# CONFIGURATION GOOGLE CALENDAR - PROFITUMV2
# ============================================================================

# Google OAuth2 - ProfitumV2
GOOGLE_CLIENT_ID=52812479275-iq1blqc657g2f72graej7m2cfp7gorp6.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=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
GOOGLE_REDIRECT_URI=http://localhost:3000/api/auth/google/callback

# ============================================================================
# CONFIGURATION SUPABASE
# ============================================================================

SUPABASE_URL=https://votre-projet.supabase.co
SUPABASE_ANON_KEY=votre_anon_key
SUPABASE_SERVICE_ROLE_KEY=votre_service_role_key

# ============================================================================
# CONFIGURATION SERVEUR
# ============================================================================

PORT=3000
NODE_ENV=development
CORS_ORIGIN=http://localhost:5173
CLIENT_URL=http://localhost:5173

# ============================================================================
# CONFIGURATION SOCKET.IO (MESSAGERIE)
# ============================================================================

SOCKET_CORS_ORIGIN=http://localhost:5173

# ============================================================================
# CONFIGURATION S√âCURIT√â
# ============================================================================

JWT_SECRET=votre_jwt_secret_tres_securise_2024_profitum
SESSION_SECRET=votre_session_secret_tres_securise_2024_profitum

# ============================================================================
# CONFIGURATION REDIS (CACHE ET QUEUES)
# ============================================================================

REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=

# ============================================================================
# CONFIGURATION GOOGLE CALENDAR AVANC√âE
# ============================================================================

# Limites de synchronisation
GOOGLE_CALENDAR_SYNC_INTERVAL=300000
GOOGLE_CALENDAR_MAX_EVENTS_PER_SYNC=1000
GOOGLE_CALENDAR_SYNC_WINDOW_DAYS=90

# Configuration des notifications
GOOGLE_CALENDAR_NOTIFICATION_EMAIL=true
GOOGLE_CALENDAR_NOTIFICATION_PUSH=true
GOOGLE_CALENDAR_DEFAULT_REMINDER_MINUTES=15

# Configuration des r√©unions
GOOGLE_CALENDAR_AUTO_CREATE_MEETINGS=true
GOOGLE_CALENDAR_MEETING_DURATION_DEFAULT=60
GOOGLE_CALENDAR_TIMEZONE_DEFAULT=Europe/Paris

# ============================================================================
# CONFIGURATION LOGS ET MONITORING
# ============================================================================

LOG_LEVEL=info
ENABLE_GOOGLE_CALENDAR_LOGS=true
ENABLE_SYNC_LOGS=true
ENABLE_ERROR_LOGS=true
EOF
    echo -e "${GREEN}‚úÖ Fichier server/.env cr√©√©${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Le fichier server/.env existe d√©j√†${NC}"
fi

# Cr√©er le fichier .env du client
if [ ! -f "client/.env" ]; then
    echo -e "${YELLOW}Cr√©ation du fichier client/.env...${NC}"
    cat > client/.env << EOF
# ============================================================================
# CONFIGURATION CLIENT - PROFITUMV2
# ============================================================================

VITE_API_URL=http://localhost:3000
VITE_SUPABASE_URL=https://votre-projet.supabase.co
VITE_SUPABASE_ANON_KEY=votre_anon_key
VITE_SOCKET_URL=http://localhost:3000

# ============================================================================
# CONFIGURATION GOOGLE CALENDAR
# ============================================================================

VITE_GOOGLE_CLIENT_ID=52812479275-iq1blqc657g2f72graej7m2cfp7gorp6.apps.googleusercontent.com
VITE_GOOGLE_REDIRECT_URI=http://localhost:3000/api/auth/google/callback
EOF
    echo -e "${GREEN}‚úÖ Fichier client/.env cr√©√©${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Le fichier client/.env existe d√©j√†${NC}"
fi

# ============================================================================
# V√âRIFICATION DE LA BASE DE DONN√âES
# ============================================================================

echo -e "\n${BLUE}üóÑÔ∏è  V√©rification de la base de donn√©es...${NC}"

# V√©rifier que les migrations ont √©t√© appliqu√©es
if [ -f "server/migrations/20250128_create_calendar_system.sql" ]; then
    echo -e "${GREEN}‚úÖ Migration du syst√®me de calendrier trouv√©e${NC}"
else
    echo -e "${RED}‚ùå Migration du syst√®me de calendrier manquante${NC}"
    echo -e "${YELLOW}Veuillez appliquer la migration 20250128_create_calendar_system.sql${NC}"
fi

# ============================================================================
# CONFIGURATION DES ROUTES
# ============================================================================

echo -e "\n${BLUE}üõ£Ô∏è  Configuration des routes...${NC}"

# V√©rifier que les routes sont configur√©es dans le serveur principal
if [ -f "server/src/app.ts" ]; then
    echo -e "${GREEN}‚úÖ Fichier app.ts trouv√©${NC}"
    
    # V√©rifier si les routes Google Calendar sont import√©es
    if grep -q "google-calendar" server/src/app.ts; then
        echo -e "${GREEN}‚úÖ Routes Google Calendar configur√©es${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Routes Google Calendar non configur√©es dans app.ts${NC}"
        echo -e "${YELLOW}Ajoutez: app.use('/api/google-calendar', require('./routes/google-calendar'))${NC}"
    fi
    
    # V√©rifier si les routes d'√©v√©nements collaboratifs sont import√©es
    if grep -q "collaborative-events" server/src/app.ts; then
        echo -e "${GREEN}‚úÖ Routes √©v√©nements collaboratifs configur√©es${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Routes √©v√©nements collaboratifs non configur√©es dans app.ts${NC}"
        echo -e "${YELLOW}Ajoutez: app.use('/api/collaborative-events', require('./routes/collaborative-events'))${NC}"
    fi
else
    echo -e "${RED}‚ùå Fichier app.ts non trouv√©${NC}"
fi

# ============================================================================
# CONFIGURATION GOOGLE CLOUD CONSOLE
# ============================================================================

echo -e "\n${BLUE}‚òÅÔ∏è  Configuration Google Cloud Console...${NC}"

echo -e "${YELLOW}üìã √âtapes √† suivre dans Google Cloud Console :${NC}"
echo -e "1. Allez sur https://console.cloud.google.com/"
echo -e "2. Cr√©ez un projet ou s√©lectionnez un projet existant"
echo -e "3. Activez les APIs :"
echo -e "   - Google Calendar API"
echo -e "   - Google+ API"
echo -e "4. Cr√©ez des identifiants OAuth2 :"
echo -e "   - Type : Web application"
echo -e "   - URIs de redirection :"
echo -e "     * http://localhost:3000/api/auth/google/callback"
echo -e "     * https://votre-domaine.com/api/auth/google/callback"
echo -e "5. Configurez l'√©cran de consentement :"
echo -e "   - Nom de l'app : Profitum"
echo -e "   - Scopes :"
echo -e "     * https://www.googleapis.com/auth/calendar"
echo -e "     * https://www.googleapis.com/auth/calendar.events"
echo -e "     * https://www.googleapis.com/auth/userinfo.email"
echo -e "     * https://www.googleapis.com/auth/userinfo.profile"

# ============================================================================
# TESTS DE CONFIGURATION
# ============================================================================

echo -e "\n${BLUE}üß™ Tests de configuration...${NC}"

# Test de compilation TypeScript
echo -e "${YELLOW}Test de compilation TypeScript...${NC}"
cd server
if npm run build 2>/dev/null; then
    echo -e "${GREEN}‚úÖ Compilation serveur OK${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Erreurs de compilation serveur (normal en d√©veloppement)${NC}"
fi
cd ..

cd client
if npm run build 2>/dev/null; then
    echo -e "${GREEN}‚úÖ Compilation client OK${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Erreurs de compilation client (normal en d√©veloppement)${NC}"
fi
cd ..

# ============================================================================
# D√âMARRAGE DES SERVICES
# ============================================================================

echo -e "\n${BLUE}üöÄ D√©marrage des services...${NC}"

echo -e "${YELLOW}Pour d√©marrer le serveur :${NC}"
echo -e "cd server && npm run dev"
echo -e ""
echo -e "${YELLOW}Pour d√©marrer le client :${NC}"
echo -e "cd client && npm run dev"
echo -e ""

# ============================================================================
# TESTS D'INT√âGRATION
# ============================================================================

echo -e "\n${BLUE}üîó Tests d'int√©gration...${NC}"

echo -e "${YELLOW}Tests √† effectuer :${NC}"
echo -e "1. Test de connexion Google Calendar :"
echo -e "   - Allez sur http://localhost:5173/google-calendar-integration"
echo -e "   - Cliquez sur 'Se connecter √† Google Calendar'"
echo -e "   - Autorisez l'acc√®s √† votre compte Google"
echo -e ""
echo -e "2. Test de cr√©ation d'√©v√©nement collaboratif :"
echo -e "   - Allez sur http://localhost:5173/agenda-client"
echo -e "   - Cr√©ez un nouvel √©v√©nement collaboratif"
echo -e "   - Invitez des participants"
echo -e ""
echo -e "3. Test de synchronisation :"
echo -e "   - V√©rifiez que les √©v√©nements apparaissent dans Google Calendar"
echo -e "   - Cr√©ez un √©v√©nement dans Google Calendar"
echo -e "   - V√©rifiez qu'il appara√Æt dans Profitum"
echo -e ""

# ============================================================================
# MONITORING ET LOGS
# ============================================================================

echo -e "\n${BLUE}üìä Monitoring et logs...${NC}"

echo -e "${YELLOW}Logs √† surveiller :${NC}"
echo -e "- Logs de synchronisation Google Calendar"
echo -e "- Logs d'erreurs d'authentification"
echo -e "- Logs de cr√©ation d'√©v√©nements"
echo -e "- Logs de notifications"
echo -e ""

# ============================================================================
# CONFIGURATION PRODUCTION
# ============================================================================

echo -e "\n${BLUE}üåê Configuration production...${NC}"

echo -e "${YELLOW}Variables d'environnement √† configurer sur Railway :${NC}"
echo -e "- GOOGLE_CLIENT_ID"
echo -e "- GOOGLE_CLIENT_SECRET"
echo -e "- GOOGLE_REDIRECT_URI (https://votre-domaine.com/api/auth/google/callback)"
echo -e "- SUPABASE_URL"
echo -e "- SUPABASE_ANON_KEY"
echo -e "- SUPABASE_SERVICE_ROLE_KEY"
echo -e "- JWT_SECRET"
echo -e "- SESSION_SECRET"
echo -e ""

echo -e "${YELLOW}Variables d'environnement √† configurer sur Vercel :${NC}"
echo -e "- VITE_API_URL (https://votre-domaine.com)"
echo -e "- VITE_SUPABASE_URL"
echo -e "- VITE_SUPABASE_ANON_KEY"
echo -e "- VITE_GOOGLE_CLIENT_ID"
echo -e ""

# ============================================================================
# FINALISATION
# ============================================================================

echo -e "\n${GREEN}üéâ Configuration Google Calendar termin√©e !${NC}"
echo -e ""
echo -e "${BLUE}üìã Prochaines √©tapes :${NC}"
echo -e "1. Configurez vos variables d'environnement Supabase"
echo -e "2. Configurez Google Cloud Console"
echo -e "3. D√©marrez les services"
echo -e "4. Testez l'int√©gration"
echo -e "5. D√©ployez en production"
echo -e ""
echo -e "${GREEN}‚úÖ Votre syst√®me d'agenda Google Calendar est pr√™t !${NC}" 